{"version":3,"sources":["SplashScreen/SplashScreen.tsx","Settings/Settings.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["SplashScreen","already","h1Ref","React","useRef","useEffect","current","classList","className","title","ref","alt","src","role","Settings","scale","setScale","facingMode","setFacingMode","canvasRef","download","dialogRef","scaleRangeInputRef","showModal","useCallback","closeModal","close","keydownHandling","e","keyCode","preventDefault","open","keydownHandlingCallback","clickHandling","clickHandlingCallback","toggleFacingMode","document","addEventListener","dialogPolyfill","registerDialog","style","top","backgroundImage","value","type","step","min","max","defaultValue","onClick","valueAsNumber","href","assertIsDefined","val","alert","Error","rad","deg","Math","PI","createCanvas","width","height","canvas","Object","assign","createElement","ctx","getContext","getTriangleCanvas","video","videoWidth","videoHeight","tan","points","x","y","shiftX","shiftY","save","drawImage","restore","globalCompositeOperation","beginPath","moveTo","lineTo","closePath","fill","getPatternCanvasContext","triangle","drawTransform","transform","rotate","scaleX","scaleY","translateX","translateY","setTransform","translate","errorHandling","err","OverconstrainedError","name","message","play","a","setPatternCanvas","setAlready","streamPromsie","navigator","mediaDevices","getUserMedia","audio","catch","stream","srcObject","getBoundingClientRect","update","triangleCanvas","patternCanvasCtx","fillStyle","createPattern","fillRect","paused","requestAnimationFrame","then","downloadCallback","pattern","options","anchor","img","body","appendChild","toDataURL","Date","toLocaleString","year","month","day","hour","minute","second","replace","click","remove","App","useState","patternCanvas","clearStream","MediaStream","getTracks","forEach","stop","streamPromise","pause","effectCallback","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.d9720d14.chunk.js","sourcesContent":["import React from 'react';\n\nimport './SplashScreen.css';\n\nconst SplashScreen = ({ already }: { already: boolean }) => {\n  const h1Ref = React.useRef<HTMLDivElement>(null);\n  React.useEffect(() => h1Ref.current?.classList[already ? 'add' : 'remove']('loaded'), [already]);\n  return (\n    <h1 className=\"SplashScreen-h1\" title=\"万顔鏡\" ref={h1Ref}>\n      <img className=\"SplashScreen-img-logo\" alt=\"万顔鏡 ロゴ画像\" src=\"./splash-logo.svg\" />\n      <img className=\"SplashScreen-img-star\" alt=\"\" role=\"presentation\" src=\"./splash-star.svg\" />\n    </h1>\n  );\n};\n\nexport default SplashScreen;\n","import React from 'react';\nimport dialogPolyfill from 'dialog-polyfill';\n\nimport { DownloadOptions } from '../App';\nimport './Settings.css';\n\ninterface Props {\n  already: boolean;\n  className: string;\n  canvasRef: React.RefObject<HTMLCanvasElement>;\n  scale: number;\n  setScale: React.Dispatch<React.SetStateAction<number>>;\n  facingMode: MediaTrackConstraints['facingMode'];\n  setFacingMode: React.Dispatch<React.SetStateAction<this['facingMode']>>;\n  download: (option: DownloadOptions) => void;\n}\n\nconst keydownHandlingCallback =\n  (dialogRef: React.RefObject<HTMLDialogElement>, closeModal: () => void, showModal: () => void) => (e: KeyboardEvent) => {\n  if (e.keyCode === 27) { // Escape\n    e.preventDefault();\n    dialogRef.current?.open ? closeModal() : showModal();\n  }\n};\n\nconst clickHandlingCallback = (showModal: () => void) => () => showModal();\n\nconst Settings = ({ already, scale, setScale, facingMode, setFacingMode, canvasRef, download }: Props) => {\n  const dialogRef          = React.useRef<HTMLDialogElement>(null);\n  const scaleRangeInputRef = React.useRef<HTMLInputElement>(null);\n  const showModal          = React.useCallback(() => dialogRef.current?.showModal(), []);\n  const closeModal         = React.useCallback(() => dialogRef.current?.close(), []);\n  const keydownHandling    = React.useCallback(keydownHandlingCallback(dialogRef, closeModal, showModal), [closeModal, showModal]);\n  const clickHandling      = React.useCallback(clickHandlingCallback(showModal), [showModal]);\n  const toggleFacingMode   = React.useCallback(() => setFacingMode(facingMode === 'user' ? 'environment' : 'user'), [facingMode, setFacingMode]);\n\n  React.useEffect(() => document.addEventListener('keydown', keydownHandling, false), [keydownHandling]);\n  React.useEffect(() => canvasRef.current?.addEventListener('click', clickHandling, false), [clickHandling, canvasRef]);\n  React.useEffect(() => { if (dialogRef.current) { dialogPolyfill.registerDialog(dialogRef.current); } }, [dialogRef]);\n\n  if (!already) { return null; }\n\n  return (\n    <>\n      <dialog className=\"Settings-dialog\" ref={dialogRef} style={{top: '30px', backgroundImage: 'url(./splash-star.svg)'}}>\n        <section>\n          <h2>設定</h2>\n          <dl>\n            <dt>パターンの大きさ</dt>\n            <dd>\n              <output>{scaleRangeInputRef.current?.value}</output>\n            </dd>\n            <dd>\n              <input\n                type=\"range\"\n                step=\"0.1\"\n                min=\"0.1\"\n                max=\"2.0\"\n                defaultValue={scale}\n                ref={scaleRangeInputRef}\n              />\n            </dd>\n            <dd>\n              <button type=\"button\" onClick={() => setScale(scaleRangeInputRef.current?.valueAsNumber || 0.5)}>\n                適用する\n              </button>\n            </dd>\n          </dl>\n          <dl>\n            <dt>フロントカメラ / リアカメラ</dt>\n            <dd>\n              <small>※ デバイスが認識できない場合は切り替わりません。</small>\n              <button type=\"button\" onClick={toggleFacingMode}>切り替える</button>\n            </dd>\n          </dl>\n        </section>\n        <section>\n          <h2>ダウンロード</h2>\n          <dl>\n            <dt>表示されているキャンバス画像を保存</dt>\n            <dd>\n              <button type=\"button\" onClick={() => download({ type: 'display' })}>画面全体</button>\n            </dd>\n            <dd>\n              <button type=\"button\" onClick={() => download({ type: 'pattern' })}>最小パターン</button>\n            </dd>\n          </dl>\n        </section>\n        <section>\n          <h2>万顔鏡について</h2>\n          <dl>\n            <dt>Source on GitHub</dt>\n            <dd><a href=\"https://github.com/ver-1000000/mangankyo\">mangankyo</a></dd>\n          </dl>\n          <dl>\n            <dt>WebSite / Author</dt>\n            <dd>\n              <a href=\"https://ver1000000.com\">Ver.1000000</a> / <a href=\"https://twitter.com/Ver1000000000\">@Ver1000000000</a>\n            </dd>\n          </dl>\n        </section>\n        <footer className=\"Settings-footer\">\n          <button type=\"button\" className=\"sky\" onClick={closeModal}>close</button>\n        </footer>\n      </dialog>\n    </>\n  );\n};\n\nexport default Settings;\n","import React from 'react';\n\nimport './App.css';\nimport SplashScreen from './SplashScreen/SplashScreen';\nimport Settings from './Settings/Settings';\n\n/**\n * ダウンロード時のオプション。\n */\nexport interface DownloadOptions {\n  /** *\"display\"時は画面全体を、\"pattern\"時は最小パターンをダウンロードする。 */\n  type: 'display' | 'pattern';\n}\n\n/**\n * `play`関数に渡すオプション。\n */\ninterface PlayOptions {\n  canvas: HTMLCanvasElement | null;\n  scale: number;\n  setAlready: React.Dispatch<boolean>;\n  setPatternCanvas: React.Dispatch<HTMLCanvasElement>;\n  facingMode: MediaTrackConstraints['facingMode'];\n}\n\n/**\n * 引数がNullableならエラーを投げるアサーション関数。\n */\nfunction assertIsDefined<T>(val: T): asserts val is NonNullable<T> {\n  if (val == null) {\n    alert('レンダリングエラー: ページを再読込してください。');\n    throw new Error(`Expected 'val' to be defined, but received ${val}`);\n  }\n}\n\n/**\n * 現在時刻を取得するお助け関数。\n */\nconst now = () => new Date().toLocaleString('ja-JP', {\n  year: 'numeric',\n  month: '2-digit',\n  day: '2-digit',\n  hour: '2-digit',\n  minute: '2-digit',\n  second: 'numeric'\n}).replace(/\\D/g, '');\n\n/**\n * 度（deg）を受け取ってラジアン角として返却するお助け関数。\n */\nconst rad = (deg: number) => deg * Math.PI / 180;\n\n/**\n * width/heightを設定したHTMLCanvasElement/CanvasRenderingContext2Dを返すお助け関数。\n */\nconst createCanvas = ({ width, height }: { width: number, height: number }) => {\n  const canvas = Object.assign(document.createElement('canvas'), { width, height });\n  const ctx    = canvas.getContext('2d') as CanvasRenderingContext2D;\n  return [canvas, ctx] as const;\n};\n\n/**\n * videoから正三角形に切り抜かれた基準となるcanvasを返す。\n */\nconst getTriangleCanvas = (video: HTMLVideoElement, { scale }: { scale: number }) => {\n  const width         = Math.min(video.videoWidth, video.videoHeight) * scale;\n  const height        = width / 2 * Math.tan(rad(60)); // 正三角形の高さ\n  const [canvas, ctx] = createCanvas({ width, height });\n  const points        = [{ x: width / 2, y: 0 }, { x: width, y: height }, { x: 0, y: height }];\n  const shiftX        = -Math.max(0, (video.videoWidth - video.videoHeight) / 2);\n  const shiftY        = -Math.max(0, (video.videoHeight - video.videoWidth) / 2);\n  ctx.save();\n  ctx.scale(scale, scale);\n  ctx.drawImage(video, shiftX, shiftY, video.videoWidth, video.videoHeight);\n  ctx.restore();\n  ctx.globalCompositeOperation = 'destination-in';\n  ctx.beginPath();\n  ctx.moveTo(points[0].x, points[0].y);\n  ctx.lineTo(points[1].x, points[1].y);\n  ctx.lineTo(points[2].x, points[2].y);\n  ctx.closePath();\n  ctx.fill();\n  ctx.globalCompositeOperation = 'source-over';\n  return canvas;\n};\n\n/**\n * シームレス化されたパターン用のCanvasRenderingContext2Dを返す。\n */\nconst getPatternCanvasContext = (triangle: HTMLCanvasElement) => {\n  const [canvas, ctx] = createCanvas({ width: triangle.width * 3, height: triangle.height * 2 });\n  const drawTransform = (transform: { rotate?: number, scaleX?: number, scaleY?: number, translateX?: number, translateY?: number }) => {\n    const { rotate = 0, scaleX = 1, scaleY = 1, translateX = 0, translateY = 0 } = transform;\n    ctx.setTransform(1, 0, 0, 1,  canvas.width / 3, canvas.height / 2);\n    ctx.rotate(rad(rotate));\n    ctx.scale(scaleX, scaleY);\n    ctx.translate(translateX, translateY);\n    ctx.drawImage(triangle, -canvas.width / 3, -canvas.height / 2);\n  }\n  drawTransform({ rotate: 0,   scaleY: 1 });\n  drawTransform({ rotate: 0,   scaleY: -1 });\n  drawTransform({ rotate: 0,   scaleY: 1,  translateX: triangle.width * 1.5, translateY: triangle.height });\n  drawTransform({ rotate: 0,   scaleY: -1, translateX: triangle.width * 1.5, translateY: triangle.height });\n  drawTransform({ rotate: 120, scaleY: 1 });\n  drawTransform({ rotate: 120, scaleY: -1 });\n  drawTransform({ rotate: 120, scaleY: 1,  translateX: 0,                    translateY: -triangle.height * 2 });\n  drawTransform({ rotate: 120, scaleY: -1, translateX: 0,                    translateY: triangle.height * 2 });\n  drawTransform({ rotate: 120, scaleY: 1,  translateX: triangle.width * 1.5, translateY: triangle.height });\n  drawTransform({ rotate: 240, scaleY: 1 });\n  drawTransform({ rotate: 240, scaleY: -1 });\n  drawTransform({ rotate: 240, scaleY: 1,  translateX: 0,                    translateY: triangle.height * 2 });\n  drawTransform({ rotate: 240, scaleY: -1, translateX: 0,                    translateY: -triangle.height * 2 });\n  drawTransform({ rotate: 240, scaleY: -1, translateX: triangle.width * 1.5, translateY: triangle.height });\n  return ctx;\n};\n\n/**\n * エラーハンドリング用関数。\n */\nconst errorHandling = (err: any) => {\n  if (err instanceof OverconstrainedError) {\n    alert(`${err.name}:\\n  要求されたデバイスが見つかりません。\\n  設定を変更してください。`)\n  } else {\n    alert(err.name + ': ' + err.message);\n  }\n}\n\n/**\n * MediaStreamを読み取り、requestAnimationFrameによるイベントループを開始する。\n */\nconst play = async (video: HTMLVideoElement, { canvas, scale, facingMode, setPatternCanvas, setAlready }: PlayOptions) => {\n  assertIsDefined(canvas);\n  const streamPromsie     = navigator.mediaDevices.getUserMedia({ audio: false, video: { facingMode } });\n  const stream            = await streamPromsie.catch(errorHandling);\n  video.srcObject         = stream || null;\n  const ctx               = canvas.getContext('2d') as CanvasRenderingContext2D;\n  const { width, height } = canvas.getBoundingClientRect();\n  Object.assign(canvas, { width, height });\n  const update = () => {\n    const triangleCanvas   = getTriangleCanvas(video, { scale });\n    const patternCanvasCtx = getPatternCanvasContext(triangleCanvas);\n    ctx.fillStyle          = patternCanvasCtx.createPattern(patternCanvasCtx.canvas, 'repeat')!;\n    ctx.fillRect(0, 0, width, height);\n    setPatternCanvas(patternCanvasCtx.canvas);\n    if (!video.paused) { requestAnimationFrame(update); }\n  };\n  await video.play().then(() => update()).then(() => setAlready(true));\n  return stream;\n};\n\n/**\n * 渡されたcanvasからpngを生成し、ダウンロードさせる。\n * {@param pattern} options.typeが\"pattern\"のとき、`pattern`のwidth/heightを利用して`main`を切り抜く\n */\nconst downloadCallback = (canvasRef: React.RefObject<HTMLCanvasElement>, pattern: HTMLCanvasElement | null) => (options: DownloadOptions) => {\n  assertIsDefined(canvasRef.current);\n  assertIsDefined(pattern);\n  const { width, height } = options.type === 'display' ? canvasRef.current : pattern;\n  const [canvas, ctx] = createCanvas({ width, height });\n  ctx.drawImage(canvasRef.current, 0, 0);\n  const anchor = document.createElement('a');\n  const img    = document.createElement('img');\n  document.body.appendChild(anchor);\n  document.body.appendChild(img);\n  anchor.href     = img.src = canvas.toDataURL()\n  anchor.download = `mangankyo_${now()}.png`;\n  anchor.click();\n  anchor.remove();\n  img.remove();\n};\n\n/**\n * オンメモリー上でAPIを提供し続けるためのvideo。\n */\nconst video = document.createElement('video');\n\n/**\n * 値の変更に連動し、videoの再生と停止などを行う。\n */\nconst effectCallback = ({\n  canvasRef,\n  scale,\n  facingMode,\n  setPatternCanvas,\n  setAlready\n}: Omit<PlayOptions, 'canvas'> & { canvasRef: React.RefObject<HTMLCanvasElement> }) => () => {\n  const clearStream = (x: HTMLVideoElement['srcObject']) => x instanceof MediaStream && x.getTracks().forEach(y => y.stop());\n  clearStream(video.srcObject);\n  const streamPromise = play(video, { canvas: canvasRef.current, scale, facingMode, setPatternCanvas, setAlready });\n  return () => {\n    setAlready(false);\n    streamPromise.then(stream => {\n      /** streanのリリースとvideoのポーズを行い、既存のイベントループを停止する。 */\n      if (!video.paused) { video.pause(); }\n      clearStream(stream || null);\n      setAlready(true);\n    });\n  };\n};\n\nconst App = () => {\n  const [already, setAlready]             = React.useState<boolean>(false);\n  const [facingMode, setFacingMode]       = React.useState<PlayOptions['facingMode']>('environment');\n  const [scale, setScale]                 = React.useState<number>(0.5);\n  const [patternCanvas, setPatternCanvas] = React.useState<HTMLCanvasElement | null>(null);\n  const canvasRef                         = React.useRef<HTMLCanvasElement>(null);\n  const download                          = React.useCallback(downloadCallback(canvasRef, patternCanvas), [patternCanvas]);\n  React.useEffect(effectCallback({ canvasRef, scale, facingMode, setPatternCanvas, setAlready }), [scale, facingMode]);\n\n  return (\n    <>\n      <canvas ref={canvasRef} className=\"App-canvas\"></canvas>\n      <SplashScreen already={already} />\n      <Settings\n        className=\"App-Settings\"\n        already={already}\n        scale={scale}\n        setScale={setScale}\n        facingMode={facingMode}\n        setFacingMode={setFacingMode}\n        download={download}\n        canvasRef={canvasRef}\n      />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}