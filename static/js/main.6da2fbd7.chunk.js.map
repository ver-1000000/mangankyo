{"version":3,"sources":["SplashScreen/SplashScreen.tsx","Settings/Settings.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["SplashScreen","already","h1Ref","React","useRef","useEffect","current","classList","add","className","title","ref","alt","src","role","Settings","setScale","canvasRef","scale","download","dialogRef","scaleRangeInputRef","showModal","useCallback","closeModal","close","changeInput","valueAsNumber","keydownHandling","e","keyCode","preventDefault","open","keydownHandlingCallback","clickHandling","clickHandlingCallback","document","addEventListener","dialogPolyfill","registerDialog","style","top","backgroundImage","type","step","min","max","value","onChange","onClick","href","assertIsDefined","val","alert","Error","rad","deg","Math","PI","createCanvas","width","height","canvas","Object","assign","createElement","ctx","getContext","getTriangleCanvas","video","videoWidth","videoHeight","tan","points","x","y","shiftX","shiftY","save","drawImage","restore","globalCompositeOperation","beginPath","moveTo","lineTo","closePath","fill","getPatternCanvasContext","triangle","drawTransform","transform","rotate","scaleX","scaleY","translateX","translateY","setTransform","translate","play","options","a","streamPromsie","navigator","mediaDevices","getUserMedia","audio","catch","err","name","message","stream","srcObject","onloadeddata","getBoundingClientRect","update","triangleCanvas","patternCanvasCtx","fillStyle","createPattern","fillRect","setPatternCanvas","requestAnimationFrame","then","setAlready","downloadImage","main","pattern","anchor","img","body","appendChild","toDataURL","Date","toLocaleString","year","month","day","hour","minute","second","replace","click","remove","App","useState","patternCanvas","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.6da2fbd7.chunk.js","sourcesContent":["import React from 'react';\n\nimport './SplashScreen.css';\n\nconst SplashScreen = ({ already }: { already: boolean }) => {\n  const h1Ref = React.useRef<HTMLDivElement>(null);\n  React.useEffect(() => { if (h1Ref.current && already) { h1Ref.current?.classList.add('loaded'); } });\n  return (\n    <h1 className=\"SplashScreen-h1\" title=\"万顔鏡\" ref={h1Ref}>\n      <img className=\"SplashScreen-img-logo\" alt=\"万顔鏡 ロゴ画像\" src=\"/splash-logo.svg\" />\n      <img className=\"SplashScreen-img-star\" alt=\"\" role=\"presentation\" src=\"/splash-star.svg\" />\n    </h1>\n  );\n};\n\nexport default SplashScreen;\n","import React from 'react';\nimport dialogPolyfill from 'dialog-polyfill';\n\nimport { DownloadOptions } from '../App';\nimport './Settings.css';\n\ninterface Props {\n  already: boolean;\n  className: string;\n  canvasRef: React.RefObject<HTMLCanvasElement>;\n  scale: number;\n  setScale: React.Dispatch<React.SetStateAction<number>>;\n  download: (option: DownloadOptions) => void;\n}\n\nconst keydownHandlingCallback =\n  (dialogRef: React.RefObject<HTMLDialogElement>, closeModal: () => void, showModal: () => void) => (e: KeyboardEvent) => {\n  if (e.keyCode === 27) { // Escape\n    e.preventDefault();\n    dialogRef.current?.open ? closeModal() : showModal();\n  }\n};\n\nconst clickHandlingCallback = (showModal: () => void) => () => showModal();\n\nconst Settings = ({ already, setScale, canvasRef, scale, download }: Props) => {\n  const dialogRef          = React.useRef<HTMLDialogElement>(null);\n  const scaleRangeInputRef = React.useRef<HTMLInputElement>(null);\n  const showModal          = React.useCallback(() => dialogRef.current?.showModal(), []);\n  const closeModal         = React.useCallback(() => dialogRef.current?.close(), []);\n  const changeInput        = React.useCallback(() => setScale(scaleRangeInputRef.current?.valueAsNumber || 0.5), [setScale]);\n  const keydownHandling    = React.useCallback(keydownHandlingCallback(dialogRef, closeModal, showModal), [closeModal, showModal]);\n  const clickHandling      = React.useCallback(clickHandlingCallback(showModal), [showModal]);\n\n  React.useEffect(() => document.addEventListener('keydown', keydownHandling, false), [keydownHandling]);\n  React.useEffect(() => canvasRef.current?.addEventListener('click', clickHandling, false), [clickHandling, canvasRef]);\n  React.useEffect(() => { if (dialogRef.current) { dialogPolyfill.registerDialog(dialogRef.current); } }, [dialogRef]);\n\n  if (!already) {\n    return null;\n  }\n\n  return (\n    <>\n      <dialog className=\"Settings-dialog\" ref={dialogRef} style={{top: '30px', backgroundImage: 'url(/splash-star.svg)'}}>\n        <section>\n          <h2>設定</h2>\n          <dl>\n            <dt>パターンの大きさ</dt>\n            <dd>\n              <output>{scale}</output>\n              <input\n                type=\"range\"\n                step=\"0.1\"\n                min=\"0.1\"\n                max=\"2.0\"\n                value={scale}\n                ref={scaleRangeInputRef}\n                onChange={changeInput}\n                />\n            </dd>\n          </dl>\n          <dl>\n            <dt>全体のキャンバス画像をダウンロード</dt>\n            <dd>\n              <small>\n                ダウンロードが上手く行かない場合は、<br />\n                キャンバスを<em>ロングタップ/右クリック</em>してダウンロードしてください。\n              </small>\n              <button type=\"button\" onClick={() => download({ type: 'display' })}>ダウンロード</button>\n            </dd>\n            <dt>最小単位のパターン画像をダウンロード</dt>\n            <dd>\n              <small>\n                壁紙などに利用しやすい、<br />\n                切れ目のないシームレスなリピート用最小パターン画像をダウンロードできます。\n              </small>\n              <button type=\"button\" onClick={() => download({ type: 'pattern' })}>ダウンロード</button>\n            </dd>\n          </dl>\n        </section>\n        <section>\n          <h2>万顔鏡について</h2>\n          <dl>\n            <dt>Source on GitHub</dt>\n            <dd><a href=\"https://github.com/ver-1000000/mangankyo\">mangankyo</a></dd>\n          </dl>\n          <dl>\n            <dt>WebSite / Author</dt>\n            <dd>\n              <a href=\"https://ver1000000.com\">Ver.1000000</a> / <a href=\"https://twitter.com/Ver1000000000\">@Ver1000000000</a>\n            </dd>\n          </dl>\n        </section>\n        <button type=\"button\" onClick={closeModal}>close</button>\n      </dialog>\n    </>\n  );\n};\n\nexport default Settings;\n","import React from 'react';\n\nimport './App.css';\nimport SplashScreen from './SplashScreen/SplashScreen';\nimport Settings from './Settings/Settings';\n\n/**\n * ダウンロード時のオプション。\n */\nexport interface DownloadOptions {\n  /** *\"display\"時は画面全体を、\"pattern\"時は最小パターンをダウンロードする。 */\n  type: 'display' | 'pattern';\n}\n\n/**\n * `play`関数に渡すオプション。\n */\ninterface PlayOptions {\n  scale: number;\n  setAlready: React.Dispatch<boolean>;\n  setPatternCanvas: React.Dispatch<HTMLCanvasElement>;\n}\n\n/**\n * 引数がNullableならエラーを投げるアサーション関数。\n */\nfunction assertIsDefined<T>(val: T): asserts val is NonNullable<T> {\n  if (val == null) {\n    alert('レンダリングエラー: ページを再読込してください。');\n    throw new Error(`Expected 'val' to be defined, but received ${val}`);\n  }\n}\n\n/**\n * 現在時刻を取得するお助け関数。\n */\nconst now = () => new Date().toLocaleString('ja-JP', {\n  year: 'numeric',\n  month: '2-digit',\n  day: '2-digit',\n  hour: '2-digit',\n  minute: '2-digit',\n  second: 'numeric'\n}).replace(/\\D/g, '');\n\n/**\n * 度（deg）を受け取ってラジアン角として返却するお助け関数。\n */\nconst rad = (deg: number) => deg * Math.PI / 180;\n\n/**\n * width/heightを設定したHTMLCanvasElement/CanvasRenderingContext2Dを返すお助け関数。\n */\nconst createCanvas = ({ width, height }: { width: number, height: number }) => {\n  const canvas = Object.assign(document.createElement('canvas'), { width, height });\n  const ctx    = canvas.getContext('2d') as CanvasRenderingContext2D;\n  return [canvas, ctx] as const;\n};\n\n/**\n * videoから正三角形に切り抜かれた基準となるcanvasを返す。\n */\nconst getTriangleCanvas = (video: HTMLVideoElement, { scale }: { scale: number }) => {\n  const width         = Math.min(video.videoWidth, video.videoHeight) * scale;\n  const height        = width / 2 * Math.tan(rad(60)); // 正三角形の高さ\n  const [canvas, ctx] = createCanvas({ width, height });\n  const points        = [{ x: width / 2, y: 0 }, { x: width, y: height }, { x: 0, y: height }];\n  const shiftX        = -Math.max(0, (video.videoWidth - video.videoHeight) / 2);\n  const shiftY        = -Math.max(0, (video.videoHeight - video.videoWidth) / 2);\n  ctx.save();\n  ctx.scale(scale, scale);\n  ctx.drawImage(video, shiftX, shiftY, video.videoWidth, video.videoHeight);\n  ctx.restore();\n  ctx.globalCompositeOperation = 'destination-in';\n  ctx.beginPath();\n  ctx.moveTo(points[0].x, points[0].y);\n  ctx.lineTo(points[1].x, points[1].y);\n  ctx.lineTo(points[2].x, points[2].y);\n  ctx.closePath();\n  ctx.fill();\n  ctx.globalCompositeOperation = 'source-over';\n  return canvas;\n};\n\n/**\n * シームレス化されたパターン用のCanvasRenderingContext2Dを返す。\n */\nconst getPatternCanvasContext = (triangle: HTMLCanvasElement) => {\n  const [canvas, ctx] = createCanvas({ width: triangle.width * 3, height: triangle.height * 2 });\n  const drawTransform = (transform: { rotate?: number, scaleX?: number, scaleY?: number, translateX?: number, translateY?: number }) => {\n    const { rotate = 0, scaleX = 1, scaleY = 1, translateX = 0, translateY = 0 } = transform;\n    ctx.setTransform(1, 0, 0, 1,  canvas.width / 3, canvas.height / 2);\n    ctx.rotate(rad(rotate));\n    ctx.scale(scaleX, scaleY);\n    ctx.translate(translateX, translateY);\n    ctx.drawImage(triangle, -canvas.width / 3, -canvas.height / 2);\n  }\n  drawTransform({ rotate: 0,   scaleY: 1 });\n  drawTransform({ rotate: 0,   scaleY: -1 });\n  drawTransform({ rotate: 0,   scaleY: 1,  translateX: triangle.width * 1.5, translateY: triangle.height });\n  drawTransform({ rotate: 0,   scaleY: -1, translateX: triangle.width * 1.5, translateY: triangle.height });\n  drawTransform({ rotate: 120, scaleY: 1 });\n  drawTransform({ rotate: 120, scaleY: -1 });\n  drawTransform({ rotate: 120, scaleY: 1,  translateX: 0,                    translateY: -triangle.height * 2 });\n  drawTransform({ rotate: 120, scaleY: -1, translateX: 0,                    translateY: triangle.height * 2 });\n  drawTransform({ rotate: 120, scaleY: 1,  translateX: triangle.width * 1.5, translateY: triangle.height });\n  drawTransform({ rotate: 240, scaleY: 1 });\n  drawTransform({ rotate: 240, scaleY: -1 });\n  drawTransform({ rotate: 240, scaleY: 1,  translateX: 0,                    translateY: triangle.height * 2 });\n  drawTransform({ rotate: 240, scaleY: -1, translateX: 0,                    translateY: -triangle.height * 2 });\n  drawTransform({ rotate: 240, scaleY: -1, translateX: triangle.width * 1.5, translateY: triangle.height });\n  return ctx;\n};\n\n/**\n * MediaStreamを読み取り、requestAnimationFrameによるイベントループを開始する。\n */\nconst play = async (canvas: HTMLCanvasElement | null, options: PlayOptions) => {\n  assertIsDefined(canvas);\n  const streamPromsie = navigator.mediaDevices.getUserMedia({ audio: false, video: true });\n  const stream        = await streamPromsie.catch(err => alert(err.name + ': ' + err.message));\n  const video             = Object.assign(document.createElement('video'), { srcObject: stream, onloadeddata });\n  const ctx               = canvas.getContext('2d') as CanvasRenderingContext2D;\n  const { width, height } = canvas.getBoundingClientRect();\n  Object.assign(canvas, { width, height });\n  const update = () => {\n    const triangleCanvas   = getTriangleCanvas(video, { scale: options.scale });\n    const patternCanvasCtx = getPatternCanvasContext(triangleCanvas);\n    ctx.fillStyle          = patternCanvasCtx.createPattern(patternCanvasCtx.canvas, 'repeat')!;\n    ctx.fillRect(0, 0, width, height);\n    options.setPatternCanvas(patternCanvasCtx.canvas);\n    requestAnimationFrame(update);\n  };\n  video.play().then(() => update()).then(() => options.setAlready(true));\n};\n\n/**\n * 渡されたcanvasからpngを生成し、ダウンロードさせる。\n * {@param pattern} options.typeが\"pattern\"のとき、`pattern`のwidth/heightを利用して`main`を切り抜く\n */\nconst downloadImage = (main: HTMLCanvasElement | null, pattern: HTMLCanvasElement | null, options: DownloadOptions) => {\n  assertIsDefined(main);\n  assertIsDefined(pattern);\n  const { width, height } = options.type === 'display' ? main : pattern;\n  const [canvas, ctx] = createCanvas({ width, height });\n  ctx.drawImage(main, 0, 0);\n  const anchor = document.createElement('a');\n  const img    = document.createElement('img');\n  document.body.appendChild(anchor);\n  document.body.appendChild(img);\n  anchor.href     = img.src = canvas.toDataURL()\n  anchor.download = `mangankyo_${now()}.png`;\n  anchor.click();\n  anchor.remove();\n  img.remove();\n};\n\nconst App = () => {\n  const [already, setAlready]             = React.useState<boolean>(false);\n  const [scale, setScale]                 = React.useState<number>(0.5);\n  const [patternCanvas, setPatternCanvas] = React.useState<HTMLCanvasElement | null>(null);\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\n  const download  = React.useCallback((options: DownloadOptions) => downloadImage(canvasRef.current, patternCanvas, options), [patternCanvas]);\n  React.useEffect(() => { play(canvasRef.current, { scale, setPatternCanvas, setAlready }); }, [scale]);\n  return (\n    <>\n      <canvas ref={canvasRef} className=\"App-canvas\"></canvas>\n      <SplashScreen already={already} />\n      <Settings\n        className=\"App-Settings\"\n        already={already}\n        scale={scale}\n        setScale={setScale}\n        download={download}\n        canvasRef={canvasRef}\n      />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}